@using DanceCompetitionHelper.Database.DisplayInfo;
@using DanceCompetitionHelper.Database.Extensions;
@using DanceCompetitionHelper.Database.Tables;
@using DanceCompetitionHelper.Web.Controllers;
@using DanceCompetitionHelper.Web.Extensions;
@using DanceCompetitionHelper.Web.Models.CompetitionClassModels;
@using DanceCompetitionHelper.Web.Models.Pdfs
@using MigraDoc.DocumentObjectModel

@model ShowMultipleStartersOverviewViewModel

@{
    var compInfo = Model.Competition;
    var compInfoStr = compInfo.GetCompetitionName();
    var multipleStartersCount = Model.OverviewItems?.Count() ?? 0;

    ViewData["Title"] = string.Format(
        "{0} Multiple Starters",
        multipleStartersCount,
        compInfoStr);

    var displayInfoBlocks = ViewModelExtensions.ExtractDisplayInfo(
        Model.OverviewItems);
}

<div class="text-center">
    <h1 class="display-6">@ViewData["Title"]</h1>

    @foreach (var displayInfos in displayInfoBlocks) 
    {
        <div class="table-responsive-xxl">
            <table class="table table-striped table-hover table-striped-columns">
                <thead>
                    <tr>
                        <th>
                            Name (@multipleStartersCount x @displayInfos.Count) (P A/B; S A/B - Starts)
                        </th>

                        @foreach (var curDisplayInfo in displayInfos)
                        {
                            var infoString = string.Empty;

                            if(curDisplayInfo.Ignore)
                            {
                                infoString = "[IGNORE!]";
                            }

                            <th>
                                @curDisplayInfo.ClassName @infoString
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OverviewItems ?? Enumerable.Empty<MultipleStarter>())
                    {
                        <tr>
                            <td class="text-nowrap">
                                @item.Name
                                (@item.PointsA / @item.PointsB; @item.StartsA / @item.StartsB - @item.CompetitionClasses.Count)
                            </td>

                            @foreach (var curDisplayInfo in displayInfos)
                            {
                                <td>
                                    @if (item.CompetitionClassNamesByClassId.ContainsKey(curDisplayInfo.ClassId))
                                    {
                                        var usePart = item.Participants
                                            .FirstOrDefault(
                                                x => x.CompetitionClassId == curDisplayInfo.ClassId);

                                        <div class="text-nowrap">
                                            # <a asp-controller="@ParticipantController.RefName"
                                            asp-action="@nameof(ParticipantController.ShowEdit)"
                                            asp-route-id="@usePart?.ParticipantId">
                                                @item.StartnumberByClassId[curDisplayInfo.ClassId]
                                            </a>
                                        </div>
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <th>
                            Name (@multipleStartersCount) (P A/B; S A/B - Starts)
                        </th>

                        @foreach (var curDisplayInfo in displayInfos)
                        {
                            <th>
                                @curDisplayInfo.ClassName
                            </th>
                        }
                    </tr>
                </tfoot>
            </table>
        </div>
    }

    <div class="hstack gap-2 justify-content-center">
        <a asp-controller="@CompetitionClassController.RefName"
            asp-action="@nameof(CompetitionClassController.Index)"
            asp-route-id="@Model.Competition?.CompetitionId"
            class="btn btn-secondary px-lg-4 bi bi-box-arrow-in-left"
            title="Back">
            Back
        </a>
        <div class="vr"></div>
        <a asp-controller="@CompetitionClassController.RefName"
            asp-action="@nameof(CompetitionClassController.ShowMultipleStartersDependentClassesView)"
            asp-route-id="@Model.Competition?.CompetitionId"
            class="btn btn-primary bi bi-bezier2"
            title="Dependent Classes View">
            Dependent Classes View
        </a>
    </div>
</div>

@{
    var toDisplay = new PdfViewModelWrapper()
    {
        AspController = CompetitionClassController.RefName,
        AspAction = nameof(CompetitionClassController.PdfMultipleStarters),
        ButtonText = "Multiple Starters",
        ShowGroupForView = true,
        //
        PdfViewModel = new PdfViewModel()
        {
            CompetitionId = Model.Competition?.CompetitionId,
            PageFormat = PageFormat.A4,
            PageOrientation = Orientation.Landscape
        }
    };
}
@Html.DisplayFor(
    m => toDisplay)
