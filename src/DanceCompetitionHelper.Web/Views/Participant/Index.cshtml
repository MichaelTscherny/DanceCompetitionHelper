@using DanceCompetitionHelper.Database.Extensions;
@using DanceCompetitionHelper.Database.Tables;
@using DanceCompetitionHelper.Web.Controllers;
@using DanceCompetitionHelper.Web.Extensions;
@using DanceCompetitionHelper.Web.Models.ParticipantModels;

@model ParticipantOverviewViewModel

@{
    var compInfo = Model.Competition;
    var compInfoStr = compInfo.GetCompetitionName();
    var participantsCount = Model.OverviewItems?.Count() ?? 0;

    ViewData["Title"] = string.Format(
        Model.DetailedView
            ? "{0} Participants Details of {1}"
            : "{0} Participants of {1}",
        participantsCount,
        compInfoStr);
}

<div class="text-center">
    <h1 class="display-6">@ViewData["Title"]</h1>
    
    <div class="table-responsive-xxl">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>
                        Class (@participantsCount)
                    </th>
                    <th>
                        #
                    </th>
                    <th>
                        Ignore
                    </th>
                    @if(Model.DetailedView)
                    {
                        <th>
                            Name A (Org-ID-A)
                        </th>
                        <th>
                            Points/Starts A
                        </th>
                        <th>
                            Name B (Org-ID-B)
                        </th>
                        <th>
                            Points/Starts B
                        </th>
                        <th>
                            Min Starts A/B
                        </th>
                    }
                    else 
                    {
                        <th>
                            Name(s)
                        </th>
                    }
                    @if(Model.DetailedView)
                    {
                        <th>
                            Club (Org-Club-ID)
                        </th>
                    }
                    else 
                    {
                        <th>
                            Club
                        </th>
                    }
                    @if (Model.DetailedView)
                    {
                        <th>
                            Class: P-F / Prom P / S
                        </th>
                    }
                    <th>
                        Possible Promotion (A / B)
                    </th>
                    <th>
                        Multiple Starts
                    </th>
                    <th>
                        Comment
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OverviewItems ?? Enumerable.Empty<Participant>())
                {
                    var extraTrClass = string.Empty;
                    var isAlreadyPromoted = item.DisplayInfo?.PromotionInfo?.AlreadyPromoted ?? false;

                    if (isAlreadyPromoted)
                    {
                        extraTrClass = "table-danger";
                    }

                    <tr class="@extraTrClass">
                        <td class="text-nowrap">
                            @item.CompetitionClass.CompetitionClassName
                            [@(item.CompetitionClass.Comment)]
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ignore)
                        </td>
                        @if (Model.DetailedView)
                        {
                            <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.NamePartA)
                                (@Html.DisplayFor(modelItem => item.OrgIdPartA))
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OrgPointsPartA)
                                / @Html.DisplayFor(modelItem => item.OrgStartsPartA)
                            </td>
                            <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.NamePartB)
                                (@Html.DisplayFor(modelItem => item.OrgIdPartB))
                            </td>
                            <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.OrgPointsPartB)
                                / @Html.DisplayFor(modelItem => item.OrgStartsPartB)
                            </td>
                            <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.MinStartsForPromotionPartA)
                                / @Html.DisplayFor(modelItem => item.MinStartsForPromotionPartB)
                            </td>
                        }
                        else 
                        {
                            <td class="text-nowrap">
                                @item.GetNames()
                            </td>
                        }
                        @if (Model.DetailedView)
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.ClubName)
                                (@Html.DisplayFor(modelItem => item.OrgIdClub))
                            </td>
                        }
                        else
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.ClubName)
                            </td>
                        }
                        @if (Model.DetailedView)
                        {
                            <td class="text-nowrap">
                                @(item.CompetitionClass.PointsForFirst) /
                                @(item.CompetitionClass.MinPointsForPromotion) /
                                @(item.CompetitionClass.MinStartsForPromotion)
                            </td>
                        }
                        <td>
                            @{
                                var useBool = item.DisplayInfo?.PromotionInfo?.PossiblePromotionA ?? false;
                                var useTooltipText = string.Format(
                                    "{0} | {1}",
                                    item.DisplayInfo?.PromotionInfo?.PossiblePromotionAInfo ?? "-",
                                    item.DisplayInfo?.PromotionInfo?.AlreadyPromotionAInfo ?? "")
                                    .Trim()
                                    .Trim('|');
                            }
                            <div class="row row-cols justify-content-center">
                                <div class="col-auto text-end"
                                     data-bs-toggle="tooltip"
                                     data-bs-custom-class="custom-tooltip"
                                     data-bs-title="@useTooltipText">
                                    @Html.DisplayFor(modelItem => useBool)
                                </div>

                            @{
                                var useBool02 = item.DisplayInfo?.PromotionInfo?.PossiblePromotionB;
                                var useTooltipText02 = string.Format(
                                    "{0}<br>{1}",
                                    item.DisplayInfo?.PromotionInfo?.PossiblePromotionBInfo ?? "-",
                                    item.DisplayInfo?.PromotionInfo?.AlreadyPromotionBInfo ?? "")
                                    .Trim();
                            }
                            @if (useBool02.HasValue)
                            {
                                <div class="col-auto">
                                    /
                                </div>
                                <div class="col-auto"
                                     data-bs-toggle="tooltip"
                                     data-bs-custom-class="custom-tooltip"
                                     data-bs-title="@useTooltipText02">
                                    @Html.DisplayFor(modelItem => useBool02.Value)
                                </div>
                            }
                            </div>
                        </td>
                        <td>
                            <div class="row row-cols justify-content-center">
                                @{
                                    useBool = item.DisplayInfo?.MultipleStartInfo?.MultipleStarts ?? false;
                                }
                                <div class="col-auto text-end"
                                     data-bs-toggle="tooltip"
                                     data-bs-custom-class="custom-tooltip"
                                     data-bs-title="@(item.DisplayInfo?.MultipleStartInfo?.MultipleStartsInfo ?? "-")">
                                    @Html.DisplayFor(modelItem => useBool)
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Comment)
                        </td>
                        <td class ="text-nowrap">
                            <a asp-controller="@ParticipantController.RefName"
                               asp-action="@nameof(ParticipantController.ShowEdit)"
                               asp-route-id="@item.ParticipantId">Edit</a> |
                            <a asp-controller="@ParticipantController.RefName"
                               asp-action="@nameof(ParticipantController.Delete)"
                               asp-route-id="@item.ParticipantId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th>
                        Class (@participantsCount)
                    </th>
                    <th>
                        #
                    </th>
                    <th>
                        Ignore
                    </th>
                    @if (Model.DetailedView)
                    {
                        <th>
                            Name A (Org-ID-A)
                        </th>
                        <th>
                            Points/Starts A
                        </th>
                        <th>
                            Name B (Org-ID-B)
                        </th>
                        <th>
                            Points/Starts B
                        </th>
                        <th>
                            Min Starts A/B
                        </th>
                    }
                    else
                    {
                        <th>
                            Name(s)
                        </th>
                    }
                    @if (Model.DetailedView)
                    {
                        <th>
                            Club (Org-Club-ID)
                        </th>
                    }
                    else
                    {
                        <th>
                            Club
                        </th>
                    }
                    @if (Model.DetailedView)
                    {
                        <th>
                            Class: P-F / Prom P / S
                        </th>
                    }
                    <th>
                        Possible Promotion (A / B)
                    </th>
                    <th>
                        Multiple Starts
                    </th>
                    <th>
                        Comment
                    </th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>

    <div class="row d-flex justify-content-center py-1">
        <div class="col">
            <a asp-controller="@ParticipantController.RefName"
               asp-action="@nameof(ParticipantController.ShowCreateEdit)"
               asp-route-id="@Model.Competition?.CompetitionId"
               class="btn btn-primary px-lg-4">
               Create new
            </a>
            &nbsp;
            <a asp-controller="@CompetitionClassController.RefName"
               asp-action="@nameof(CompetitionClassController.Index)"
               asp-route-id="@Model.Competition?.CompetitionId"
               class="btn btn-secondary px-lg-4">
                Back
            </a>
            |
            @if(Model.DetailedView)
            {
                <a asp-controller="@ParticipantController.RefName"
               asp-action="@nameof(ParticipantController.Index)"
               asp-route-id="@Model.Competition?.CompetitionId"
               class="btn btn-primary px-lg-4">
                    Normal View
                </a>
            }
            else 
            {
                <a asp-controller="@ParticipantController.RefName"
                   asp-action="@nameof(ParticipantController.DetailedView)"
                   asp-route-id="@Model.Competition?.CompetitionId"
                   class="btn btn-primary px-lg-4">
                    Detailed View
                </a>
            }
        </div>
    </div>
</div>
